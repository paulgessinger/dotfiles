if [ -f ~/.bashrc.local ]; then
        . ~/.bashrc.local
fi

if [ -f ~/dotfiles/private.sh ]; then
  source ~/dotfiles/private.sh
fi

#export PATH=~/.bin:$PATH

export CERN_USER=pagessin
export RUCIO_ACCOUNT=pagessin
export EDITOR=vim

export FZF_TMUX=0

platform='unknown'
unamestr=`uname`
if [[ "$unamestr" == 'Linux' ]]; then
        platform='linux'
elif [[ "$unamestr" == 'FreeBSD' ]]; then
      platform='freebsd'
fi


###
# VARIABLES
###

export CLICOLOR=1
export LSCOLORS=GxFxCxDxBxegedabagaced
export LS_COLORS='di=1:fi=0:ln=31:pi=5:so=5:bd=5:cd=5:or=31:mi=0:ex=35:*.rpm=90'
export HOMEBREW_CASK_OPTS="--appdir=/Applications"

###
# LS COLORS
###
if [[ $platform == 'linux' ]]; then
        alias ls='ls --color -h'
elif [[ $platform == 'freebsd' ]]; then
      alias ls='ls -G -h'
fi


###
# ALIASES AND FUNCTIONS
###

alias ll="ls -l"
#alias mk="make -j8 ; tput bel"
#alias mk1="make -j1 ; tput bel"
alias clip="nc localhost 8377"

function cdpn {
 cd "$(tmux display-message -p -F "#{pane_current_path}" "-t$1")"
}
export cdpn

function mk {
  make $1 -j8 ; tput bel
}
export mk

function bld {
  if [ -f ../build.sh ]; then
    bf="../build.sh"
  elif [ -f ./build.sh ]; then
    bf="./build.sh"
  else
    echo "build.sh not found"
    return 1
  fi
  
  eval $bf "$@"
}
export bld

function cfg {
  if [ -f ../config.sh ]; then
    cf="../config.sh"
  elif [ -f ./config.sh ]; then
    cf="./config.sh"
  else
    echo "config.sh not found"
    return 1
  fi
  
  eval $cf "$@"
}
export cfg

function cmk {
  cmake --build . -- -j8 ; tput bel
}
export cmk

# tig doesn't understand truecolor
alias tig="TERM=xterm tig"

alias vi="vim"


GIT_PS1_SHOWDIRTYSTATE=1
#GIT_PS1_SHOWUNTRACKEDFILES=1
#GIT_PS1_SHOWUPSTREAM="auto"
GIT_PS1_SHOWCOLORHINTS=1

function short_path() {
        local IFS=/ P=${PWD#?} F
        if [[ "$HOME" == "$PWD" ]] ; then
          echo -n "~"
          return 0
        fi

        if [[ "${PWD##"$HOME/"}" != "${PWD}" ]] ; then
          echo -n "~"
          P="${PWD##"$HOME/"}"
        fi
        for F in $P; do echo -n /${F::1}; done
        [[ $P ]] || echo -n /
        echo -n ${F:1}
}


if [ -n "$BASH_VERSION" ]; then
  test -e "${HOME}/.iterm2_shell_integration.bash" && source "${HOME}/.iterm2_shell_integration.bash"

  [ -f ~/.fzf.bash ] && source ~/.fzf.bash

  export PS1='[\[\e[1m\]\u@\h $(short_path)\[\e[0m\]]\$ '
  if [ -f ~/git-prompt.sh ]; then
    source ~/git-prompt.sh
    export PROMPT_COMMAND='__git_ps1 "[\[\e[1m\]\u@\h $(short_path)\[\e[0m\]]" "\\\$ "'
  fi
  if [ -f ~/git-completion.bash ]; then
    source ~/git-completion.bash
  fi
else
  [ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

  export PS1='[%B%n@%m $(shrink_path -f)%b]\$ '
  if [ -f ~/git-prompt.sh ]; then
    source ~/git-prompt.sh
    export PROMPT_COMMAND='__git_ps1 "[%B%n@%m $(shrink_path -f)%b]" "\$ "'
  fi
  if [ -f ~/git-completion.zsh ]; then
    source ~/git-completion.zsh
  fi
fi

export FZF_DEFAULT_COMMAND='ag -U -f -g ""'
export FZF_CTRL_T_COMMAND=$FZF_DEFAULT_COMMAND



